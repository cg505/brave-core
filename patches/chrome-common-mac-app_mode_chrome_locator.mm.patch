diff --git a/chrome/common/mac/app_mode_chrome_locator.mm b/chrome/common/mac/app_mode_chrome_locator.mm
index 7e5f3fa0b7e13065d4c28b9152522ee69f790d25..b974b7a6d1753527c53ea466fa3d80f4fc336ddf 100644
--- a/chrome/common/mac/app_mode_chrome_locator.mm
+++ b/chrome/common/mac/app_mode_chrome_locator.mm
@@ -113,7 +113,34 @@ bool GetChromeBundleInfo(const base::FilePath& chrome_bundle,
     }
   }
 
+<<<<<<< ours
   if (!framework_path_and_structure)
+=======
+  // Get the framework path.
+  NSString* cr_bundle_exe =
+      ObjCCast<NSString>(
+          [cr_bundle objectForInfoDictionaryKey:@"CFBundleExecutable"]);
+  // Essentially we want chrome::kFrameworkName which looks like
+  // "$PRODUCT_STRING Framework.framework". The library itself is at
+  // "$PRODUCT_STRING Framework.framework/$PRODUCT_STRING Framework". Note that
+  // $PRODUCT_STRING is not |cr_bundle_exe| because in Canary the framework is
+  // still called "Google Chrome Framework".
+  // However, we want the shims to be agnostic to distribution and operate based
+  // on the data in their plist, so encode the framework names here.
+  NSDictionary* framework_for_exe = @{
+    @"Brave": @"Brave",
+    @"Google Chrome": @"Google Chrome",
+    @"Google Chrome Canary": @"Google Chrome",
+  };
+  NSString* framework_name = [framework_for_exe objectForKey:cr_bundle_exe];
+  NSString* cr_framework_shlib_path =
+      [cr_versioned_path stringByAppendingPathComponent:
+          [framework_name stringByAppendingString:@" Framework.framework"]];
+  cr_framework_shlib_path =
+      [cr_framework_shlib_path stringByAppendingPathComponent:
+          [framework_name stringByAppendingString:@" Framework"]];
+  if (!cr_bundle_exe || !cr_framework_shlib_path)
+>>>>>>> theirs
     return false;
 
   // A few sanity checks.
